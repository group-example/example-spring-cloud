package spring.cloud.generator.plugins;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.*;
import org.mybatis.generator.api.dom.xml.Attribute;
import org.mybatis.generator.api.dom.xml.Document;
import org.mybatis.generator.api.dom.xml.TextElement;
import org.mybatis.generator.api.dom.xml.XmlElement;

import java.util.List;

/**
 * 用于生成批量物理删除方法
 * 
 * @author liuluming
 *
 */
public class SelectByIdsPlugin extends PluginAdapter {

	@Override
	public boolean validate(List<String> warnings) {
		return true;
	}

	@Override
	public boolean clientSelectByExampleWithBLOBsMethodGenerated(Method method, Interface interfaze,
                                                                 IntrospectedTable introspectedTable) {

		interfaze.addMethod(generateSelectByIds(method, introspectedTable));

		return true;
	}

	@Override
	public boolean clientSelectByExampleWithoutBLOBsMethodGenerated(Method method, Interface interfaze,
                                                                    IntrospectedTable introspectedTable) {

		interfaze.addMethod(generateSelectByIds(method, introspectedTable));

		return true;
	}

	@Override
	public boolean clientSelectByExampleWithBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass,
                                                                 IntrospectedTable introspectedTable) {

		topLevelClass.addMethod(generateSelectByIds(method, introspectedTable));
		return true;
	}

	@Override
	public boolean clientSelectByExampleWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass,
                                                                    IntrospectedTable introspectedTable) {

		topLevelClass.addMethod(generateSelectByIds(method, introspectedTable));
		return true;
	}

	@Override
	public boolean sqlMapDocumentGenerated(Document document, IntrospectedTable introspectedTable) {

		String tableName = introspectedTable.getAliasedFullyQualifiedTableNameAtRuntime();// 数据库表名

		XmlElement parentElement = document.getRootElement();

		// 设置sql的类型及Id
		XmlElement selectByIdsElement = new XmlElement("select");
		selectByIdsElement.addAttribute(new Attribute("id", "selectByPrimaryKeys"));
		selectByIdsElement.addAttribute(new Attribute("resultMap", "BaseResultMap"));

		// 添加注释
		selectByIdsElement.addElement(new TextElement("<!--"));
		selectByIdsElement.addElement(new TextElement("  WARNING - @mbggenerated"));
		selectByIdsElement.addElement(
				new TextElement("  This element is automatically generated by MyBatis Generator, do not modify."));
		selectByIdsElement.addElement(new TextElement("-->"));
		// 填充sql
		selectByIdsElement.addElement(new TextElement("select <include refid=\"Base_Column_List\" /> from " + tableName
				+ "  where id in "
				+ " <foreach item=\"item\" index=\"index\" collection=\"ids\" open=\"(\" separator=\",\" close=\")\">#{item}</foreach> "));

		parentElement.addElement(selectByIdsElement);

		return super.sqlMapDocumentGenerated(document, introspectedTable);
	}

	private Method generateSelectByIds(Method method, IntrospectedTable introspectedTable) {

		Method m = new Method("selectByPrimaryKeys");

		m.setVisibility(method.getVisibility());

		m.setReturnType(FullyQualifiedJavaType.getIntInstance());

		m.addParameter(new Parameter(new FullyQualifiedJavaType("Long[]"), "ids", "@Param(\"ids\")"));

		context.getCommentGenerator().addGeneralMethodComment(m, introspectedTable);
		return m;
	}

}
